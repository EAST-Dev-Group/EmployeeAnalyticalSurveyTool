import { MakeOptional } from '../models/helpers';
import { AxisConfig, ScaleName } from '../models';
import { ChartsAxisProps } from '../models/axis';
import { DatasetType } from '../models/seriesType/config';
export declare const useDefaultizeAxis: (inXAxis: MakeOptional<AxisConfig<ScaleName, any, ChartsAxisProps>, "id">[] | undefined, inYAxis: MakeOptional<AxisConfig<ScaleName, any, ChartsAxisProps>, "id">[] | undefined, dataset: DatasetType | undefined) => {
    reverse?: boolean | undefined;
    fill?: string | undefined;
    stroke?: string | undefined;
    data?: any[] | undefined;
    label?: string | undefined;
    max?: (number | Date) | undefined;
    min?: (number | Date) | undefined;
    valueFormatter?: ((value: any, context: import("../internals").AxisValueFormatterContext) => string) | undefined;
    dataKey?: string | undefined;
    sx?: import("@mui/system").SxProps | undefined;
    classes?: Partial<import("..").ChartsAxisClasses> | undefined;
    tickMaxStep?: number | undefined;
    tickMinStep?: number | undefined;
    tickNumber?: number | undefined;
    disableLine?: boolean | undefined;
    disableTicks?: boolean | undefined;
    tickFontSize?: number | undefined;
    tickLabelStyle?: import("..").ChartsTextProps["style"];
    labelStyle?: import("..").ChartsTextProps["style"];
    tickLabelInterval?: ("auto" | ((value: any, index: number) => boolean)) | undefined;
    labelFontSize?: number | undefined;
    tickSize?: number | undefined;
    slots?: Partial<import("../internals").ChartsAxisSlots> | undefined;
    slotProps?: Partial<import("../internals").ChartsAxisSlotProps> | undefined;
    tickInterval?: ("auto" | ((value: any, index: number) => boolean) | any[]) | undefined;
    tickPlacement?: ("start" | "end" | "middle" | "extremities") | undefined;
    tickLabelPlacement?: ("middle" | "tick") | undefined;
    scaleType?: "linear" | "time" | "log" | "band" | "point" | "pow" | "sqrt" | "utc" | undefined;
    colorMap?: import("../models/colorMapping").ContinuousColorConfig<number | Date> | import("../models/colorMapping").PiecewiseColorConfig<number | Date> | import("../models/colorMapping").OrdinalColorConfig<string | number | Date> | undefined;
    hideTooltip?: boolean | undefined;
    id: import("../internals").AxisId;
}[][];
